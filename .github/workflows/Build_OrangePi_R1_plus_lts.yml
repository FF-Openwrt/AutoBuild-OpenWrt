name: Build_OrangePi_R1_plus_lts

# Add a button to trigger the workflow
on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  OpenWrt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Init Building Dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set +e
          docker rmi $(docker images -q)
          sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
          sudo -E apt-get update -y
          sudo -E apt-get full-upgrade -y
          sudo -E apt-get install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget -y
          sudo -E apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool lib32gcc1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev  libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev -y
          sudo -E apt-get install -y python3-pyelftools Python3-elftools pyelftools 
          sudo -E pip3 install pyelftools
          sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
          sudo -E apt-get clean -y
          sudo -E swapoff -a
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
      - name: Server Benchmark
        run: |
          wget -qO- --no-check-certificate https://raw.githubusercontent.com/Kurokosama/serverbench/main/bench.sh | bash
      - name: Clone Source
        run: |
          cd "/home/runner"
          git clone --branch "openwrt-24.10" --single-branch "https://github.com/immortalwrt/immortalwrt" "openwrt"
          sudo chown -R runner:runner "openwrt"
          cd "/home/runner/openwrt"
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Build OpenWrt-18.06
        run: |
          cd "/home/runner/openwrt"
          cp -f "${GITHUB_WORKSPACE}/OrangePi_R1_plus_lts.config" ".config"
          chmod +x ./customize.sh && ./customize.sh
          make defconfig
          make -j$[$(nproc)+1]

      - name: Rebuild OpenWrt to Collect Error Log If Failed
        if: failure()
        run: |
          cd "/home/runner/openwrt"
          make -j1 V=s

      - name: Upload OpenWrt-18.06 SHA256SUM Hash
        uses: actions/upload-artifact@master
        with:
          name: openwrt-18.06-sha256sums
          path: /home/runner
      # - name: Upload OpenWrt-18.06 EXT4 Firmware
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: openwrt-18.06-rockchip-OrangePi_R1_plus_lts-ext4-sysupgrade.img.gz
      #     path: /home/runner/immortalwrt-18.06-rockchip-OrangePi_R1_plus_lts-ext4-sysupgrade.img.gz
      # - name: Upload OpenWrt-18.06 SquashFS Firmware
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: openwrt-18.06-rockchip-OrangePi_R1_plus_lts-squashfs-sysupgrade.img.gz
      #     path: /home/runner/immortalwrt-18.06-rockchip-OrangePi_R1_plus_lts-squashfs-sysupgrade.img.gz
      # - name: Upload OpenWrt-18.06 IPK Packages
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: IPK Packages
      #     path: /home/runner/openwrt/bin/packages
